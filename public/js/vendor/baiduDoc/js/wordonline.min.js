/*!
 * wordonline
 */
!function() { !
    function() {
        function a() {
            var d, e, f, g, a = document.getElementsByTagName("script"),
            c = a[a.length - 1].src;
            return c ? (d = document.createElement("a"), d.href = c, d.href = d.href, e = d.protocol + "//" + d.hostname + (d.port && "80" != d.port ? ":" + d.port: ""), f = "/" == d.pathname.charAt(0) ? d.pathname: "/" + d.pathname, g = e + f, b(b(g))) : ""
        }
        function b(a) {
            return a = a.replace(/\/$/, ""),
            a.substr(0, a.lastIndexOf("/") + 1)
        }
        var c = a(),
        d = b(c),
        e = d + "baiduDoc/server/";
        window.WO = {
            WO_URL: c,
            WO_ROOT_URL: d,
            WO_SERVER_URL: e,
            uploaderSwfUrl: c + "lib/webuploader/Uploader.swf",
            uploaderServerUrl: e + "controller.php?action=uploadfile",
            uploaderFieldName: "upfile"
        }
    } (),
    function() {
        $.extend(WO, {
            isReady: function() {
                return 1 == WO.__isReady
            },
            render: function(a, b, content) {
                var c = UE.getEditor(b, {
                    toolbars: [["message", "editword"]],
                    initialStyle: "body{padding: 100px!important;overflow-x:hidden!important;}p{word-wrap:break-word;}p{text-align:justify;letter-spacing:.001cm}table td,table th{border-color:#444444!important;padding:2px 8px;}",
                    initialContent: "",
                    autoClearinitialContent: "true",
                    focus: !0,
                    enableDragUpload: !1,
                    zIndex: 10
                });
                c.ready(function() {
                    WO.initUI(),
                    WO.initToolbar(a, c),
                    WO.__isReady = !0,
                    WO.fire("ready"),
                    UE.getEditor('wordeditor').setContent(content)
                }),
                WO.ue = WO.editor = window.ue = c
            },
            initToolbar: function(a, b) {
                WO.toolbar = FUIToolbar.getToolbar(a, b),
                WO.fire("toolbarready", WO.toolbar)
            },
            ready: function(a) {
                WO.isReady() ? a.call() : WO.on("ready", a)
            }
        })
    } (),
    function() {
        var a = [],
        b = {},
        c = !1;
        $.extend(WO, {
            registerUI: function(b, c, d) {
                "function" == typeof c && (d = c, c = null),
                a.push({
                    id: b,
                    ui: d,
                    deps: c
                })
            },
            initUI: function() {
                c || $.each(a,
                function(a, c) {
                    var d = c.deps;
                    d && (d = $.map(d,
                    function(a) {
                        return WO.getUI(a)
                    })),
                    b[c.id] = c.ui.apply(null, [b].concat(d || []))
                })
            },
            getUI: function(a) {
                return b[a]
            }
        })
    } (),
    WO.registerUI("eve",
    function() {
        return {
            setup: function(a) {
                var b = {};
                return a.on = function(a, c) {
                    var d = $.isArray(a) ? a: a.split(" ");
                    return $.each(d,
                    function(a, d) {
                        var e = b[d] || (b[d] = []);
                        e.push(c)
                    }),
                    this
                },
                a.off = function(a, c) {
                    var e, d = b[a];
                    return d && (e = d.indexOf(c), ~e ? d.splice(e, 1) : c[a] = null),
                    this
                },
                a.once = function(b, c) {
                    return this.on(b,
                    function d() {
                        c.apply(a, arguments),
                        a.off(b, d)
                    })
                },
                a.fire = function(c) {
                    var d = b[c],
                    e = [].slice.call(arguments, 1);
                    return d && $.each(d,
                    function(b, c) {
                        return 1 == c.apply(a, e) ? !1 : void 0
                    }),
                    this
                },
                a
            }
        }
    }),
    WO.registerUI("wox",
    function() {
        var b = WO.getUI("eve");
        b.setup(WO)
    }),
    WO.registerUI("fiox",
    function() {
        var b = WO.getUI("eve");
        b.setup(fio.user)
    }),
    function() {
        $.ajaxSetup({
            cache: !1
        })
    } (),
    WO.registerUI("keymap",
    function() {
        var d, b = {
            "ctrl+alt+192": "newdoc",
            "ctrl+78": "openmenu",
            "ctrl+79": "openmenu",
            "ctrl+83": "savedoc",
            "ctrl+shift+83": "saveasdoc",
            "ctrl+alt+83": "sharedoc",
            "ctrl+80": "print",
            27 : "esc",
            "ctrl+70": "search",
            "ctrl+65": "selectall",
            "ctrl+187": "upsize",
            "ctrl+189": "downsize",
            8 : "backspace"
        },
        c = function(a, c) {
            "string" != typeof a && (c = a);
            var e, f, d = c.keyCode;
            if (91 != d) for (f in b) e = f.match(/(ctrl\+)?(shift\+)?(alt\+)?([\d]+)/),
            !(c.ctrlKey || c.metaKey) ^ Boolean(e[1]) && !c.shiftKey ^ Boolean(e[2]) && !c.altKey ^ Boolean(e[3]) && d == e[4] && WO.fire(b[f], b[f], c)
        };
        WO.on("backspace",
        function(a, b) {
            var c = b.target || b.srcElement;
            c == document.body && b && (b.preventDefault ? b.preventDefault() : b.returnValue = !1)
        }),
        d = WO.editor,
        d && (d.on("keydown", c), $(document.body).on("keydown", c), UE.browser.chrome && d.on("keydown",
        function(a, b) {
            var c = b.keyCode || b.which;
            return (b.metaKey && b.altKey || b.ctrlKey && b.shiftKey) && 73 == c ? !0 : void 0
        }), WO.on("selectall",
        function(a, b) {
            var c = b.target || b.srcElement;
            c && c.tagName && "input" != c.tagName.toLowerCase() && "textarea" != c.tagName.toLowerCase() && 1 != c.contentEditable && (b && (b.preventDefault ? b.preventDefault() : b.returnValue = !1), WO.editor.execCommand("selectAll"))
        }), WO.on("upsize",
        function(a, b) {
            b && (b.preventDefault ? b.preventDefault() : b.returnValue = !1),
            WO.editor.execCommand("upsize")
        }), WO.on("downsize",
        function(a, b) {
            b && (b.preventDefault ? b.preventDefault() : b.returnValue = !1),
            WO.editor.execCommand("downsize")
        }))
    }),
    WO.registerUI("enter",
    function() {
        function b(a, b) {
            var c = (b || location.hash).match(new RegExp("(^|&|#|\\?)" + a + "=([^&]+)"));
            return c && c[2]
        }
        WO.ready(function() {
            var a, d; (a = b("tpl")) ? WO.fire("loadtemplate", a) : (d = b("path")) ? WO.fire("opendoc", d, "current") : (action = b("action")) && WO.fire("switchtotpl"),
            WO.fire("afterloadhash")
        })
    }),
    WO.registerUI("confirm",
    function() {
        function d() {
            function c(b, c) {
                switch ("string" != typeof b && (c = b), c.keyCode) {
                case 13:
                    a.trigger("ok"),
                    a.close();
                    break;
                case 27:
                    a.close()
                }
            }
            if (!WO._confirmDialog) {
                var a = new FUI.Dialog({
                    title: "",
                    className: "wo-dialog wo-confirm",
                    mask: {
                        className: "wo-confirm-mask",
                        opacity: .2
                    }
                });
                a.on("ok",
                function() {
                    b && b()
                }),
                a.on("open",
                function() {
                    $(document).on("keydown", c),
                    WO.editor.on("keydown", c)
                }),
                a.on("close",
                function() {
                    $(document).off("keydown", c),
                    WO.editor.off("keydown", c)
                }),
                $(a.getContentElement()).append('<div class="wo-confirm-message"></div>'),
                a.positionTo(document.body),
                WO._confirmDialog = a
            }
            return WO._confirmDialog
        }
        var b = function() {},
        c = function() {};
        WO.on("confirm",
        function(a) {
            var g, e = d(),
            f = $(e.getElement());
            a && (a.onOk && (b = a.onOk), a.onCancel && (c = a.onCancel), f.find(".fui-dialog-caption").html(a.title || ""), f.find(".wo-confirm-message").html(a.message || "确定?"), g = e.getButtons(), g && g.length && (g[0].setLabel(a.textOk || "确定"), g[1].setLabel(a.textCancel || "取消"), !a.textOk && $(g[0].getElement()).hide(), !a.textCancel && $(g[1].getElement()).hide())),
            e.open()
        })
    }),
    WO.addMask = function() {
        $(document.body).addClass("loading"),
        setTimeout(function() {
            WO.editor.blur()
        })
    },
    WO.removeMask = function() {
        $(document.body).removeClass("loading")
    },
    UE.plugin.register("cut",
    function() {
        var a = this;
        return {
            commands: {
                cut: {
                    execCommand: function() {
                        a.document.execCommand("cut") || alert("浏览器不支持,请使用 'Ctrl + x'")
                    }
                }
            }
        }
    }),
    UE.plugin.register("fontsizechange",
    function() {
        var a = this,
        b = [8, 9, 10, 11, 12, 14, 16, 18, 20, 24, 26, 36, 48, 72];
        return {
            shortcutkey: {
                upsize: 'ctrl+187"',
                downsize: "ctrl+189"
            },
            commands: {
                upsize: {
                    execCommand: function() {
                        var d, c = parseInt(a.queryCommandValue("fontsize"));
                        for (d = 0; d < b.length; d++) if (b[d] > c) {
                            a.execCommand("fontsize", b[d] + "px");
                            break
                        }
                    }
                },
                downsize: {
                    execCommand: function() {
                        var d, c = parseInt(a.queryCommandValue("fontsize"));
                        for (d = b.length - 1; d >= 0; d--) if (b[d] < c) {
                            a.execCommand("fontsize", b[d] + "px");
                            break
                        }
                    }
                }
            }
        }
    }),
    UE.plugin.register("justify",
    function() {
        var a = this;
        return {
            commands: {
                justifyleft: {
                    execCommand: function() {
                        a.execCommand("justify", "left")
                    },
                    queryCommandState: function() {
                        return - 1 == a.queryCommandState("justify") ? -1 : "left" == a.queryCommandValue("justify") ? 1 : 0
                    }
                },
                justifycenter: {
                    execCommand: function() {
                        a.execCommand("justify", "center")
                    },
                    queryCommandState: function() {
                        return - 1 == a.queryCommandState("justify") ? -1 : "center" == a.queryCommandValue("justify") ? 1 : 0
                    }
                },
                justifyright: {
                    execCommand: function() {
                        a.execCommand("justify", "right")
                    },
                    queryCommandState: function() {
                        return - 1 == a.queryCommandState("justify") ? -1 : "right" == a.queryCommandValue("justify") ? 1 : 0
                    }
                },
                justifyjustify: {
                    execCommand: function() {
                        a.execCommand("justify", "justify")
                    },
                    queryCommandState: function() {
                        return - 1 == a.queryCommandState("justify") ? -1 : "justify" == a.queryCommandValue("justify") ? 1 : 0
                    }
                }
            }
        }
    }),
    UE.plugin.register("rowspacing",
    function() {
        var a = this;
        return {
            commands: {
                rowspacingtop: {
                    execCommand: function(b, c) {
                        a.execCommand("rowspacing", c, "top")
                    },
                    queryCommandState: function() {
                        return - 1 == a.queryCommandState("justify") ? -1 : "left" == a.queryCommandValue("justify") ? 1 : 0
                    }
                },
                rowspacingbottom: {
                    execCommand: function(b, c) {
                        a.execCommand("rowspacing", c, "bottom")
                    },
                    queryCommandState: function() {
                        return - 1 == a.queryCommandState("justify") ? -1 : "left" == a.queryCommandValue("justify") ? 1 : 0
                    }
                }
            }
        }
    }),
    UE.plugin.register("fontstyle",
    function() {
        var a = this;
        return {
            commands: {
                fontstyle: {
                    execCommand: function(b, c) {
                        a.execCommand("paragraph", c.tagName, {
                            style: c.style
                        })
                    }
                }
            }
        }
    }),
    UE.Editor.prototype._bkGetActionUrl = UE.Editor.prototype.getActionUrl,
    UE.Editor.prototype.getActionUrl = function(a) {
        return "uploadimage" == a || "uploadimage" == a ? WO.WO_SERVER_URL + "controller.php?action=uploadimage": "uploadscrawl" == a ? WO.WO_SERVER_URL + "controller.php?action=uploadscrawl": this._bkGetActionUrl.call(this, a)
    },
    UE.plugin.register("export",
    function() {
        return {
            commands: {
                exporttxt: {
                    execCommand: function() {},
                    queryCommandState: function() {
                        return - 1
                    }
                },
                exportword: {
                    execCommand: function() {},
                    queryCommandState: function() {
                        return - 1
                    }
                },
                exportpdf: {
                    execCommand: function() {},
                    queryCommandState: function() {
                        return - 1
                    }
                }
            }
        }
    }),
    UE.plugin.register("todo",
    function() {
        return {
            commands: function(a) {
                var b, c;
                for (a = a.split(" "), b = {},
                c = 0; c < a.length; c++) b[a[c]] = {
                    execCommand: function() {},
                    queryCommandState: function() {
                        return - 1
                    }
                };
                return b
            } ("formula comment showcomment coordination")
        }
    }),
    UE.plugin.register("messagefix",
    function() {
        var a = this;
        a.on("showmessage",
        function() {
            var b = $(a.container);
            $(".edui-editor-messageholder").css({
                position: "absolute",
                top: b.offset().top + 4,
                left: b.offset().left + b.width() - 150 - 3,
                width: "150px",
                height: "auto"
            }).appendTo(document.body)
        })
    }),
    UE.plugin.register("autoupload",
    function() {
        function a(a, b) {
            var i, k, n, o, p, q, r, c = b,
            l = /image\/\w+/i.test(a.type) ? "image": "file",
            m = "loading_" + ( + new Date).toString(36),
            d = c.getOpt(l + "FieldName"),
            e = c.getOpt(l + "UrlPrefix"),
            f = c.getOpt(l + "MaxSize"),
            g = c.getOpt(l + "AllowFiles"),
            h = c.getActionUrl(c.getOpt(l + "ActionName")),
            j = function(a) {
                var b = c.document.getElementById(m);
                b && UE.dom.domUtils.remove(b),
                c.fireEvent("showmessage", {
                    id: m,
                    content: a,
                    type: "error",
                    timeout: 4e3
                })
            };
            return "image" == l ? (i = '<img class="loadingclass" id="' + m + '" src="' + c.options.themePath + c.options.theme + '/images/spacer.gif">', k = function(a) {
                var b = e + a.url,
                d = c.document.getElementById(m);
                d && (UE.dom.domUtils.removeClasses(d, "loadingclass"), d.setAttribute("src", b), d.setAttribute("_src", b), d.setAttribute("alt", a.original || ""), d.removeAttribute("id"), c.trigger("contentchange", d))
            }) : (i = '<p><img class="loadingclass" id="' + m + '" src="' + c.options.themePath + c.options.theme + '/images/spacer.gif">' + "</p>", k = function(a) {
                var b = e + a.url,
                d = c.document.getElementById(m),
                f = c.selection.getRange(),
                g = f.createBookmark();
                f.selectNode(d).select(),
                c.execCommand("insertfile", {
                    url: b
                }),
                f.moveToBookmark(g).select()
            }),
            c.execCommand("inserthtml", i),
            c.getOpt(l + "ActionName") ? a.size > f ? (j(c.getLang("autoupload.exceedSizeError")), void 0) : (n = a.name ? a.name.substr(a.name.lastIndexOf(".")) : "", n && "image" != l || g && -1 == (g.join("") + ".").indexOf(n.toLowerCase() + ".") ? (j(c.getLang("autoupload.exceedTypeError")), void 0) : (o = new XMLHttpRequest, p = new FormData, q = UE.utils.serializeParam(c.queryCommandValue("serverparam")) || "", r = UE.utils.formatUrl(h + ( - 1 == h.indexOf("?") ? "?": "&") + q), p.append(d, a, a.name || "blob." + a.type.substr("image/".length)), p.append("type", "ajax"), o.open("post", r, !0), o.setRequestHeader("X-Requested-With", "XMLHttpRequest"), o.addEventListener("load",
            function(a) {
                try {
                    var b = new Function("return " + UE.utils.trim(a.target.response))();
                    "SUCCESS" == b.state && b.url ? (k(b), c.fireEvent("imageUploadSuccess", b)) : j(b.state)
                } catch(d) {
                    j(c.getLang("autoupload.loadError"))
                }
            }), o.send(p), void 0)) : (j(c.getLang("autoupload.errorLoadConfig")), void 0)
        }
        function b(a) {
            return a.clipboardData && a.clipboardData.items && 1 == a.clipboardData.items.length && /^image\//.test(a.clipboardData.items[0].type) ? a.clipboardData.items: null
        }
        function c(a) {
            return a.dataTransfer && a.dataTransfer.files ? a.dataTransfer.files: null
        }
        return {
            outputRule: function(a) {
                UE.utils.each(a.getNodesByTagName("img"),
                function(a) { / \b(loaderrorclass) | (bloaderrorclass)\b / .test(a.getAttr("class")) && a.parentNode.removeChild(a)
                }),
                UE.utils.each(a.getNodesByTagName("p"),
                function(a) { / \bloadpara\b / .test(a.getAttr("class")) && a.parentNode.removeChild(a)
                })
            },
            bindEvents: {
                defaultOptions: {
                    enableDragUpload: !0,
                    enablePasteUpload: !0
                },
                ready: function() {
                    var f, e = this;
                    window.FormData && window.FileReader && (f = function(d) {
                        var i, h, f = !1,
                        g = "paste" == d.type ? b(d) : c(d);
                        if (g) {
                            for (h = g.length; h--;) i = g[h],
                            i.getAsFile && (i = i.getAsFile()),
                            i && i.size > 0 && (a(i, e), f = !0);
                            f && d.preventDefault()
                        }
                    },
                    e.getOpt("enablePasteUpload") !== !1 && UE.dom.domUtils.on(e.body, "paste ", f), e.getOpt("enableDragUpload") !== !1 ? (UE.dom.domUtils.on(e.body, "drop", f), UE.dom.domUtils.on(e.body, "dragover",
                    function(a) {
                        "Files" == a.dataTransfer.types[0] && a.preventDefault()
                    })) : UE.browser.gecko && UE.dom.domUtils.on(e.body, "drop",
                    function(a) {
                        c(a) && a.preventDefault()
                    }), UE.utils.cssRule("loading", ".loadingclass{display:inline-block;cursor:default;background: url('" + this.options.themePath + this.options.theme + "/images/loading.gif') no-repeat center center transparent;border:1px solid #cccccc;margin-left:1px;height: 22px;width: 22px;}\n" + ".loaderrorclass{display:inline-block;cursor:default;background: url('" + this.options.themePath + this.options.theme + "/images/loaderror.png') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;" + "}", this.document))
                }
            }
        }
    }),
    UE.plugin.register("simpleupload",
    function() {
        function d() {
            var d = c.offsetWidth || 46,
            e = c.offsetHeight || 24,
            f = document.createElement("iframe"),
            g = "display:block;width:" + d + "px;height:" + e + "px;overflow:hidden;border:0;margin:0;padding:0;position:absolute;top:0;left:0;filter:alpha(opacity=0);-moz-opacity:0;-khtml-opacity: 0;opacity: 0;cursor:pointer;";
            UE.dom.domUtils.on(f, "load",
            function() {
                var k, l, m, n, c = ( + new Date).toString(36),
                i = f.contentDocument || f.contentWindow.document,
                j = i.body,
                h = i.createElement("div");
                h.innerHTML = '<form id="edui_form_' + c + '" target="edui_iframe_' + c + '" method="POST" enctype="multipart/form-data" action="' + a.getOpt("serverUrl") + '" ' + 'style="' + g + '">' + '<input id="edui_input_' + c + '" type="file" accept="image/*" name="' + a.options.imageFieldName + '" ' + 'style="' + g + '">' + "</form>" + '<iframe id="edui_iframe_' + c + '" name="edui_iframe_' + c + '" style="display:none;width:0;height:0;border:0;margin:0;padding:0;position:absolute;"></iframe>',
                h.className = "edui-" + a.options.theme,
                h.id = a.ui.id + "_iframeupload",
                j.style.cssText = g,
                j.style.width = d + "px",
                j.style.height = e + "px",
                j.appendChild(h),
                j.parentNode && (j.parentNode.style.width = d + "px", j.parentNode.style.height = d + "px"),
                k = i.getElementById("edui_form_" + c),
                l = i.getElementById("edui_input_" + c),
                m = i.getElementById("edui_iframe_" + c),
                UE.dom.domUtils.on(l, "change",
                function() {
                    function f() {
                        try {
                            var c, d, e, h = (m.contentDocument || m.contentWindow.document).body,
                            i = h.innerText || h.textContent || "";
                            d = new Function("return " + i)(),
                            c = a.options.imageUrlPrefix + d.url,
                            "SUCCESS" == d.state && d.url ? (e = a.document.getElementById(b), UE.dom.domUtils.removeClasses(e, "loadingclass"), e.setAttribute("src", c), e.setAttribute("_src", c), e.setAttribute("alt", d.original || ""), e.removeAttribute("id"), a.fireEvent("imageUploadSuccess", d)) : g && g(d.state)
                        } catch(j) {
                            g && g(a.getLang("simpleupload.loadError"))
                        }
                        k.reset(),
                        UE.dom.domUtils.un(m, "load", f)
                    }
                    function g(c) {
                        if (b) {
                            var d = a.document.getElementById(b);
                            d && UE.dom.domUtils.remove(d),
                            a.fireEvent("showmessage", {
                                id: b,
                                content: c,
                                type: "error",
                                timeout: 4e3
                            })
                        }
                    }
                    var b, c, d, e, h, i;
                    if (l.value) {
                        if (b = "loading_" + ( + new Date).toString(36), c = UE.utils.serializeParam(a.queryCommandValue("serverparam")) || "", d = a.getActionUrl(a.getOpt("imageActionName")), e = a.getOpt("imageAllowFiles"), a.focus(), a.execCommand("inserthtml", '<img class="loadingclass" id="' + b + '" src="' + a.options.themePath + a.options.theme + '/images/spacer.gif">'), !a.getOpt("imageActionName")) return errorHandler(a.getLang("autoupload.errorLoadConfig")),
                        void 0;
                        if (h = l.value, i = h ? h.substr(h.lastIndexOf(".")) : "", !i || e && -1 == (e.join("") + ".").indexOf(i.toLowerCase() + ".")) return g(a.getLang("simpleupload.exceedTypeError")),
                        void 0;
                        UE.dom.domUtils.on(m, "load", f),
                        k.action = UE.utils.formatUrl(d + ( - 1 == d.indexOf("?") ? "?": "&") + c),
                        k.submit()
                    }
                }),
                a.addListener("selectionchange",
                function() {
                    clearTimeout(n),
                    n = setTimeout(function() {
                        var b = a.queryCommandState("simpleupload");
                        l.disabled = -1 == b ? "disabled": !1
                    },
                    400)
                }),
                b = !0
            }),
            f.style.cssText = g,
            c.appendChild(f)
        }
        var c, a = this,
        b = !1;
        return {
            bindEvents: {
                ready: function() {
                    UE.utils.cssRule("loading", ".loadingclass{display:inline-block;cursor:default;background: url('" + this.options.themePath + this.options.theme + "/images/loading.gif') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;}\n" + ".loaderrorclass{display:inline-block;cursor:default;background: url('" + this.options.themePath + this.options.theme + "/images/loaderror.png') no-repeat center center transparent;border:1px solid #cccccc;margin-right:1px;height: 22px;width: 22px;" + "}", this.document)
                },
                simpleuploadbtnready: function(b, e) {
                    c = e,
                    a.afterConfigReady(d)
                }
            },
            outputRule: function(a) {
                UE.utils.each(a.getNodesByTagName("img"),
                function(a) { / \b(loaderrorclass) | (bloaderrorclass)\b / .test(a.getAttr("class")) && a.parentNode.removeChild(a)
                })
            },
            commands: {
                simpleupload: {
                    queryCommandState: function() {
                        return b ? 0 : -1
                    }
                }
            }
        }
    }),
    UE.commands["preview"] = {
        execCommand: function() {
            function b() {
                var a = new Date,
                b = function(a) {
                    return N = ["00", "01", "02", "03", "04", "05", "06", "07", "08", "09"][a] || a
                };
                return b(a.getMonth() + 1) + "-" + b(a.getDate()) + " " + b(a.getHours()) + ":" + b(a.getMinutes())
            }
            var a = WO.doc.current().path;
            WO.utils.openPostWin(WO.WO_ROOT_URL + "preview.php", {
                content: this.getContent(),
                title: a ? a.substring(a.lastIndexOf("/") + 1, a.lastIndexOf(".")) : "未命名文档",
                createTime: b(),
                author: fio.user.current().username
            })
        },
        notNeedUndo: 1
    },
    UE.plugins["autoheight"] = function() {
        function g() {
            var a = this;
            clearTimeout(f),
            h || (!a.queryCommandState || a.queryCommandState && 1 != a.queryCommandState("source")) && (f = setTimeout(function() {
                for (var b = a.body.lastChild; b && 1 != b.nodeType;) b = b.previousSibling;
                b && 1 == b.nodeType && (b.style.clear = "both", e = Math.max(UE.dom.domUtils.getXY(b).y + b.offsetHeight + 225, Math.max(d.minFrameHeight, d.initialFrameHeight)), e != c && (e !== parseInt(a.iframe.parentNode.style.height) && (a.iframe.parentNode.style.height = e + "px"), a.body.style.height = e + "px", c = e), UE.dom.domUtils.removeStyle(b, "clear"))
            },
            50))
        }
        var b, e, f, c, d, h, a = this;
        a.autoHeightEnabled = a.options.autoHeightEnabled !== !1,
        a.autoHeightEnabled && (c = 0, d = a.options, a.addListener("fullscreenchanged",
        function(a, b) {
            h = b
        }), a.addListener("destroy",
        function() {
            a.removeListener("contentchange afterinserthtml keyup mouseup", g)
        }), a.enableAutoHeight = function() {
            var c, a = this;
            a.autoHeightEnabled && (c = a.document, a.autoHeightEnabled = !0, b = c.body.style.overflowY, c.body.style.overflowY = "hidden", a.addListener("contentchange afterinserthtml keyup mouseup", g), setTimeout(function() {
                g.call(a)
            },
            UE.browser.gecko ? 100 : 0), a.fireEvent("autoheightchanged", a.autoHeightEnabled))
        },
        a.disableAutoHeight = function() {
            a.body.style.overflowY = b || "",
            a.removeListener("contentchange", g),
            a.removeListener("keyup", g),
            a.removeListener("mouseup", g),
            a.autoHeightEnabled = !1,
            a.fireEvent("autoheightchanged", a.autoHeightEnabled)
        },
        a.on("setHeight",
        function() {
            a.disableAutoHeight()
        }), a.addListener("ready",
        function() {
            var b, c;
            a.enableAutoHeight(),
            UE.dom.domUtils.on(UE.browser.ie ? a.body: a.document, UE.browser.webkit ? "dragover": "drop",
            function() {
                clearTimeout(b),
                b = setTimeout(function() {
                    g.call(a)
                },
                100)
            }),
            window.onscroll = function() {
                null === c ? c = this.scrollY: 0 == this.scrollY && 0 != c && (a.window.scrollTo(0, 0), c = null)
            }
        }))
    },
    UE.plugin.register("blockindent",
    function() {
        var a = this,
        b = function() {
            var c = UE.dom.domUtils.filterNodeList(a.selection.getStartElementPath(), "p h1 h2 h3 h4 h5 h6");
            return c && c.style.marginLeft && Math.round(parseInt(c.style.marginLeft) / 32)
        };
        return {
            commands: {
                blockindent: {
                    execCommand: function() {
                        var b = a.queryCommandValue("blockindent");
                        a.execCommand("paragraph", "p", {
                            style: "margin-left:" + (32 * ++b + "px")
                        })
                    },
                    queryCommandValue: b
                },
                blockoutdent: {
                    execCommand: function() {
                        var b = a.queryCommandValue("blockoutdent");
                        b > 0 && a.execCommand("paragraph", "p", {
                            style: "margin-left:" + (32 * --b + "px")
                        })
                    },
                    queryCommandValue: b
                }
            }
        }
    }),
    UE.plugin.register("share",
    function() {
        return {
            commands: {
                share: {
                    execCommand: function(a) {
                        WO.fire("sharedoc", a)
                    }
                }
            }
        }
    }),
    UE.plugin.register("directory",
    function() {
        var a = this;
        return {
            commands: {
                directory: {
                    execCommand: function() {
                        a.fireEvent("toggledirectory")
                    }
                }
            }
        }
    }),
    function() {
        var a = {},
        b = window.FUIToolbar = {
            getToolbar: function(a, b) {
                return new c(a, b)
            },
            registerWidgetHandler: function(b, c) {
                $.each(b.split(/\s+/),
                function(b, d) {
                    a[d] = c
                })
            }
        },
        c = function(a, b) {
            this.targetId = a,
            this.editor = b,
            this.$toolbar = null,
            this.$tabList = null,
            this.$tabContent = null,
            this.init()
        };
        c.prototype = {
            init: function() {
                this.initContainer(),
                this.initMainTabs()
            },
            initContainer: function() {
                this.$toolbar = $("#" + this.targetId),
                this.$tabList = $('<div class="tab-list"></div>').appendTo(this.$toolbar),
                this.$tabContent = $('<div class="tab-content"></div>').appendTo(this.$toolbar),
                this.$popupContainer = $('<div class="popup-container"></div>').appendTo(this.$toolbar)
            },
            initMainTabs: function() {
                var c = this;
                c.tabwidget = FUI.Creator.parse(b.MainConfig),
                c.tabwidget.appendButtonTo(c.$tabList[0]),
                c.tabwidget.appendPanelTo(c.$tabContent[0]),
                WO.ConfigTraveller(b.MainConfig,
                function(b) {
                    var d = a[b.clazz],
                    e = FUI.widgets[b.id];
                    e && d && d.call(c, b, e, c.editor)
                })
            }
        }
    } (),
    function() {
        FUIToolbar.MainConfig = {
            clazz: "Tabs",
            className: "wo-tabs",
            buttons: [],
            panels: []
        }
    } (),
    function() {
        var a = {
            clazz: "InputMenu",
            id: "fontfamily",
            className: "wo-input-menu-fontfamily",
            text: "字体格式",
            select: 0,
            input: {
                placeholder: "字体格式"
            },
            menu: {
                items: function() {
                    var a = [];
                    return $.each([{
                        name: "songti",
                        val: "宋体,SimSun"
                    },
                    {
                        name: "yahei",
                        val: "微软雅黑,Microsoft YaHei"
                    },
                    {
                        name: "kaiti",
                        val: "楷体,楷体_GB2312, SimKai"
                    },
                    {
                        name: "heiti",
                        val: "黑体, SimHei"
                    },
                    {
                        name: "lishu",
                        val: "隶书, SimLi"
                    },
                    {
                        name: "andaleMono",
                        val: "andale mono"
                    },
                    {
                        name: "arial",
                        val: "arial, helvetica,sans-serif"
                    },
                    {
                        name: "arialBlack",
                        val: "arial black,avant garde"
                    },
                    {
                        name: "comicSansMs",
                        val: "comic sans ms"
                    },
                    {
                        name: "impact",
                        val: "impact,chicago"
                    },
                    {
                        name: "timesNewRoman",
                        val: "times new roman"
                    }],
                    function(b, c) {
                        a.push({
                            value: c.val,
                            label: {
                                text: c.name,
                                style: {
                                    "font-family": c.val,
                                    "font-size": "18px"
                                }
                            }
                        })
                    }),
                    a
                } ()
            }
        },
        b = {
            clazz: "InputMenu",
            id: "fontsize",
            className: "wo-input-menu-fontsize",
            text: "字号",
            select: 4,
            input: {
                placeholder: "字号"
            },
            menu: {
                items: function() {
                    var a = [];
                    return UE.utils.each([10, 11, 12, 14, 16, 18, 20, 24, 36],
                    function(b) {
                        a.push({
                            value: b + "px",
                            label: {
                                text: b + "px",
                                style: {
                                    "font-size": b + "px"
                                }
                            }
                        })
                    }),
                    a
                } ()
            }
        },
        d = {
            clazz: "ButtonMenu",
            id: "unorderedlist",
            _cmd: "insertunorderedlist",
            className: "wo-btnmenu-unorderedlist",
            text: "编号",
            selected: 1,
            buttons: [{
                className: "fui-button-menu-button"
            },
            {
                className: "fui-button-menu-down"
            }],
            menu: {
                items: [{
                    label: "○ 空心项目符号",
                    value: "circle"
                },
                {
                    label: "● 实心项目符号",
                    value: "disc"
                },
                {
                    label: "■ 方形项目符号",
                    value: "square"
                }]
            }
        },
        e = {
            clazz: "ButtonMenu",
            id: "orderedlist",
            _cmd: "insertorderedlist",
            className: "wo-btnmenu-orderedlist",
            text: "编号",
            selected: 0,
            buttons: [{
                className: "fui-button-menu-button"
            },
            {
                className: "fui-button-menu-down"
            }],
            menu: {
                items: [{
                    label: "1., 2., 3., 4.,  ",
                    value: "decimal"
                },
                {
                    label: "a., b., c., d.,  ",
                    value: "lower-alpha"
                },
                {
                    label: "i., ii., iii., iv.,  ",
                    value: "lower-roman"
                },
                {
                    label: "A., B., C., D.,  ",
                    value: "upper-alpha"
                },
                {
                    label: "I., II., III., IV.,  ",
                    value: "upper-roman"
                }]
            }
        },
        f = {
            clazz: "ButtonMenu",
            id: "rowspacingtop",
            className: "wo-btnmenu-rowspacingtop",
            text: "段前距",
            selected: 0,
            buttons: [{
                className: "fui-button-menu-button"
            },
            {
                className: "fui-button-menu-down"
            }],
            menu: {
                items: [{
                    label: "5px",
                    value: 5
                },
                {
                    label: "10px",
                    value: 10
                },
                {
                    label: "15px",
                    value: 15
                },
                {
                    label: "20px",
                    value: 20
                },
                {
                    label: "25px",
                    value: 25
                }]
            }
        },
        g = {
            clazz: "ButtonMenu",
            id: "rowspacingbottom",
            className: "wo-btnmenu-rowspacingbottom",
            text: "段后距",
            selected: 0,
            buttons: [{
                className: "fui-button-menu-button"
            },
            {
                className: "fui-button-menu-down"
            }],
            menu: {
                items: [{
                    label: "5px",
                    value: 5
                },
                {
                    label: "10px",
                    value: 10
                },
                {
                    label: "15px",
                    value: 15
                },
                {
                    label: "20px",
                    value: 20
                },
                {
                    label: "25px",
                    value: 25
                }]
            }
        },
        h = {
            clazz: "ButtonMenu",
            id: "lineheight",
            className: "wo-btnmenu-lineheight",
            text: "行高",
            selected: 0,
            buttons: [{
                className: "fui-button-menu-button"
            },
            {
                className: "fui-button-menu-down"
            }],
            menu: {
                items: function() {
                    var a = [];
                    return UE.utils.each([1, 1.5, 1.75, 2, 3, 4, 5],
                    function(b) {
                        a.push({
                            value: b,
                            label: b
                        })
                    }),
                    a
                } ()
            }
        },
        i = {
            clazz: "DropPanel",
            id: "fontstyle",
            className: "wo-drop-panel wo-drop-panel-fontstyle",
            button: {
                className: "fui-drop-panel-down"
            }
        };
        FUIToolbar.MainConfig.buttons.push({
            className: "wo-tabs-btn",
            label: "编辑"
        }),
        FUIToolbar.MainConfig.panels.push({
            className: "fui-tab-content fui-tab-content-edit",
            widgets: [
                {
                    clazz: "LabelPanel",
                    id: "publish",
                    className: "wo-block",
                    label: "发布",
                    layout: "top",
                    widgets: [{
                    clazz: "Panel",
                    className: "wo-line",
                    widgets: [
                        {
                            clazz: "Button",
                            id: "redo",
                            className: "wo-btn wo-btn-redo openDoc",
                            text: "打开",
                            label: "打开"
                        }
                        ,{
                            clazz: "Button",
                            id: "undo",
                            className: "wo-btn wo-btn-undo saveDoc",
                            text: "保存",
                            label: "保存"
                        }
                    ]
                }]
                },
                {
                clazz: "LabelPanel",
                id: "blockhistory",
                className: "wo-block wo-blockhistory",
                label: "历史记录",
                layout: "top",
                widgets: [{
                    clazz: "Panel",
                    className: "wo-line",
                    widgets: [{
                        clazz: "Button",
                        id: "undo",
                        className: "wo-btn wo-btn-undo",
                        text: "撤销",
                        label: "撤销"
                    },
                    {
                        clazz: "Button",
                        id: "redo",
                        className: "wo-btn wo-btn-redo",
                        text: "恢复",
                        label: "恢复"
                    }]
                },
                {
                    clazz: "Panel",
                    className: "wo-line",
                    widgets: [{
                        clazz: "Button",
                        id: "drafts1",
                        _cmd: "drafts",
                        className: "wo-btn wo-btn-drafts",
                        text: "草稿箱",
                        label: "草稿箱",
                        layout: "bottom"
                    }]
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockclipboard",
                className: "wo-block wo-blockclipboard",
                label: "剪贴板",
                layout: "top",
                widgets: [{
                    clazz: "Panel",
                    className: "wo-line",
                    column: !0,
                    widgets: [{
                        clazz: "Button",
                        id: "copy",
                        className: "wo-btn wo-btn-copy",
                        text: "复制",
                        label: "复制"
                    },
                    {
                        clazz: "Button",
                        id: "cut",
                        className: "wo-btn wo-btn-cut",
                        text: "剪切",
                        label: "剪切"
                    }]
                },
                {
                    clazz: "Panel",
                    className: "wo-line",
                    widgets: [{
                        clazz: "Button",
                        id: "paste",
                        className: "wo-btn wo-btn-paste",
                        text: "粘贴",
                        label: "粘贴",
                        layout: "bottom"
                    }]
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockfont",
                className: "wo-block wo-blockfont",
                label: "字体",
                layout: "top",
                column: !0,
                widgets: [{
                    clazz: "Panel",
                    className: "wo-line wo-line-1",
                    widgets: [a, {
                        clazz: "Button",
                        id: "removeformat",
                        className: "wo-btn wo-btn-removeformat",
                        label: "清除格式",
                        text: "清除格式"
                    },
                    {
                        clazz: "Button",
                        id: "autotypeset",
                        className: "wo-btn wo-btn-autotypeset",
                        label: "自动格式化",
                        text: "自动格式化"
                    },
                    {
                        clazz: "Button",
                        id: "formatmatch",
                        className: "wo-btn wo-btn-formatmatch",
                        label: "格式刷",
                        text: "格式刷"
                    }]
                },
                {
                    clazz: "Panel",
                    className: "wo-line wo-line-2",
                    widgets: [b, {
                        clazz: "Button",
                        id: "upsize",
                        className: "wo-btn wo-btn-upsize",
                        text: "增大字体"
                    },
                    {
                        clazz: "Button",
                        id: "downsize",
                        className: "wo-btn wo-btn-downsize",
                        text: "缩小字体"
                    },
                    {
                        clazz: "Button",
                        id: "subscript",
                        className: "wo-btn wo-btn-subscript",
                        text: "上标"
                    },
                    {
                        clazz: "Button",
                        id: "superscript",
                        className: "wo-btn wo-btn-superscript",
                        text: "下标"
                    },
                    {
                        clazz: "Button",
                        id: "bold",
                        className: "wo-btn wo-btn-bold",
                        text: "加粗"
                    },
                    {
                        clazz: "Button",
                        id: "italic",
                        className: "wo-btn wo-btn-italic",
                        text: "倾斜"
                    },
                    {
                        clazz: "Button",
                        id: "underline",
                        className: "wo-btn wo-btn-underline",
                        text: "下划线"
                    },
                    {
                        clazz: "Button",
                        id: "strikethrough",
                        className: "wo-btn wo-btn-strikethrough",
                        text: "删除线"
                    },
                    {
                        clazz: "Button",
                        id: "forecolor",
                        className: "wo-btn wo-btn-forecolor",
                        text: "文字颜色"
                    },
                    {
                        clazz: "Button",
                        id: "backcolor",
                        className: "wo-btn wo-btn-backcolor",
                        text: "背景颜色"
                    }]
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockparagraph",
                className: "wo-block wo-blockparagraph",
                label: "段落",
                layout: "top",
                column: !0,
                widgets: [{
                    clazz: "Panel",
                    className: "wo-line wo-line-1",
                    widgets: [{
                        clazz: "Button",
                        id: "justifyleft",
                        className: "wo-btn wo-btn-justifyleft",
                        text: "向左对齐"
                    },
                    {
                        clazz: "Button",
                        id: "justifycenter",
                        className: "wo-btn wo-btn-justifycenter",
                        text: "居中对齐"
                    },
                    {
                        clazz: "Button",
                        id: "justifyright",
                        className: "wo-btn wo-btn-justifyright",
                        text: "向右对齐"
                    },
                    {
                        clazz: "Button",
                        id: "justifyjustify",
                        className: "wo-btn wo-btn-justifyjustify",
                        text: "两端对齐"
                    },
                    {
                        clazz: "Button",
                        id: "blockquote",
                        className: "wo-btn wo-btn-blockquote",
                        text: "引用"
                    },
                    {
                        clazz: "Button",
                        id: "blockindent",
                        className: "wo-btn wo-btn-blockindent",
                        text: "增加缩进"
                    },
                    {
                        clazz: "Button",
                        id: "blockoutdent",
                        className: "wo-btn wo-btn-blockoutdent",
                        text: "减少缩进"
                    }]
                },
                {
                    clazz: "Panel",
                    className: "wo-line wo-line-2",
                    widgets: [d, e, f, g, h]
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockstyle",
                className: "wo-block wo-blockstyle",
                label: "样式",
                layout: "top",
                widgets: [i]
            }]
        })
    } (),
    function() {
        FUIToolbar.MainConfig.buttons.push({
            className: "wo-tabs-btn",
            label: "插入"
        }),
        FUIToolbar.MainConfig.panels.push({
            className: "fui-tab-content fui-tab-content-insert",
            widgets: [{
                clazz: "LabelPanel",
                id: "blockpage",
                className: "wo-block wo-blockpage",
                layout: "top",
                label: "页",
                widgets: [{
                    clazz: "Button",
                    id: "horizontal",
                    className: "wo-btn wo-btn-horizontal",
                    text: "分页符",
                    label: "分页符",
                    layout: "bottom"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockchar",
                className: "wo-block wo-blockchar",
                layout: "top",
                label: "字符",
                widgets: [{
                    clazz: "Button",
                    id: "spechars",
                    className: "wo-btn wo-btn-spechars",
                    text: "字符",
                    label: "字符",
                    layout: "bottom",
                    _dialog: {
                        width: 620,
                        height: 575,
                        caption: "插入字符"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blocklink",
                className: "wo-block wo-blocklink",
                layout: "top",
                label: "链接",
                column: !0,
                widgets: [{
                    clazz: "Button",
                    id: "link",
                    className: "wo-btn wo-btn-link",
                    text: "添加链接",
                    label: "添加链接",
                    _dialog: {
                        width: 420,
                        height: 250,
                        caption: "添加链接"
                    }
                },
                {
                    clazz: "Button",
                    id: "unlink",
                    className: "wo-btn wo-btn-unlink",
                    text: "取消链接",
                    label: "取消链接"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockimage",
                className: "wo-block wo-blockimage",
                layout: "top",
                label: "图片",
                widgets: [{
                    clazz: "Button",
                    id: "insertimage",
                    className: "wo-btn wo-btn-insertimage",
                    text: "图片",
                    label: "图片",
                    layout: "bottom",
                    _dialog: {
                        width: 650,
                        height: 470,
                        caption: "插入图片"
                    }
                },
                {
                    clazz: "Panel",
                    className: "wo-line",
                    widgets: [{
                        clazz: "Panel",
                        className: "wo-line",
                        column: !0,
                        widgets: [{
                            clazz: "Panel",
                            className: "wo-line wo-line-1",
                            widgets: [{
                                clazz: "Button",
                                id: "simpleupload",
                                className: "wo-btn wo-btn-simpleupload",
                                text: "单图上传",
                                label: "单图"
                            },
                            {
                                clazz: "Button",
                                id: "emotion",
                                className: "wo-btn wo-btn-emotion",
                                text: "表情",
                                label: "表情",
                                _popup: {
                                    caption: "插入表情",
                                    iframe: !0
                                }
                            }]
                        },
                        {
                            clazz: "Panel",
                            className: "wo-line wo-line-2",
                            widgets: [{
                                clazz: "Button",
                                id: "snapscreen",
                                className: "wo-btn wo-btn-snapscreen",
                                text: "截屏",
                                label: "截屏"
                            },
                            {
                                clazz: "Button",
                                id: "scrawl",
                                className: "wo-btn wo-btn-scrawl",
                                text: "涂鸦",
                                label: "涂鸦",
                                _dialog: {
                                    width: 520,
                                    height: 430,
                                    caption: "插入涂鸦"
                                }
                            }]
                        }]
                    }]
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockmap",
                className: "wo-block wo-blockmap",
                layout: "top",
                label: "地图",
                column: !0,
                widgets: [{
                    clazz: "Button",
                    id: "map",
                    className: "wo-btn wo-btn-map",
                    text: "地图",
                    label: "地图",
                    layout: "bottom",
                    _dialog: {
                        width: 570,
                        height: 460,
                        caption: "插入地图"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockvideo",
                className: "wo-block wo-blockvideo",
                layout: "top",
                label: "视频",
                column: !0,
                widgets: [{
                    clazz: "Button",
                    id: "video",
                    className: "wo-btn wo-btn-insertvideo",
                    text: "视频",
                    label: "视频",
                    layout: "bottom",
                    _dialog: {
                        width: 590,
                        height: 480,
                        caption: "插入视频"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockattachment",
                className: "wo-block wo-blockattachment",
                layout: "top",
                label: "附件",
                column: !0,
                widgets: [{
                    clazz: "Button",
                    id: "attachment",
                    className: "wo-btn wo-btn-attachment",
                    text: "附件",
                    label: "附件",
                    layout: "bottom",
                    _dialog: {
                        width: 650,
                        height: 500,
                        caption: "插入附件"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockcode",
                className: "wo-block wo-blockcode",
                layout: "top",
                label: "代码",
                widgets: [{
                    clazz: "Button",
                    id: "insertcode",
                    className: "wo-btn wo-btn-insertcode",
                    text: "代码",
                    label: "代码",
                    layout: "bottom"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blocktable",
                className: "wo-block wo-blocktable",
                layout: "top",
                label: "表格",
                widgets: [{
                    clazz: "TablePicker",
                    id: "inserttable1",
                    _cmd: "inserttable",
                    button: {
                        className: "wo-btn wo-btn-inserttable",
                        text: "表格",
                        label: "表格",
                        layout: "bottom"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockformula",
                className: "wo-block wo-blockformula",
                layout: "top",
                label: "公式",
                widgets: [{
                    clazz: "Button",
                    id: "formula",
                    className: "wo-btn wo-btn-insertformula",
                    text: "公式",
                    label: "公式",
                    layout: "bottom",
                    _popup: {
                        width: 600,
                        height: 400,
                        caption: "插入公式"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockcomment",
                className: "wo-block wo-blockcomment",
                layout: "top",
                label: "批注",
                widgets: [{
                    clazz: "Button",
                    id: "comment",
                    className: "wo-btn wo-btn-comment",
                    text: "批注",
                    label: "批注",
                    layout: "bottom",
                    _dialog: {
                        width: 600,
                        height: 400,
                        caption: "添加批注"
                    }
                }]
            }]
        })
    } (),
    function() {
        FUIToolbar.MainConfig.buttons.push({
            className: "wo-tabs-btn",
            label: "表格"
        }),
        FUIToolbar.MainConfig.panels.push({
            className: "fui-tab-content fui-tab-content-table",
            widgets: [{
                clazz: "LabelPanel",
                id: "blocktable",
                className: "wo-block wo-blocktable",
                layout: "top",
                label: "表格",
                widgets: [{
                    clazz: "Panel",
                    widgets: [{
                        clazz: "TablePicker",
                        id: "inserttable2",
                        _cmd: "inserttable",
                        button: {
                            className: "wo-btn wo-btn-inserttable",
                            text: "插入表格",
                            label: "插入表格",
                            layout: "bottom"
                        }
                    },
                    {
                        clazz: "Button",
                        id: "deletetable",
                        className: "wo-btn wo-btn-deletetable",
                        text: "删除表格",
                        label: "删除表格",
                        layout: "bottom"
                    }]
                },
                {
                    clazz: "Panel",
                    column: !0,
                    widgets: [{
                        clazz: "Panel",
                        widgets: [{
                            clazz: "Button",
                            id: "insertrow",
                            className: "wo-btn wo-btn-insertrow",
                            text: "插入行"
                        },
                        {
                            clazz: "Button",
                            id: "insertcol",
                            className: "wo-btn wo-btn-insertcol",
                            text: "插入列"
                        }]
                    },
                    {
                        clazz: "Panel",
                        widgets: [{
                            clazz: "Button",
                            id: "deleterow",
                            className: "wo-btn wo-btn-deleterow",
                            text: "删除行"
                        },
                        {
                            clazz: "Button",
                            id: "deletecol",
                            className: "wo-btn wo-btn-deletecol",
                            text: "删除列"
                        }]
                    }]
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockmergecells",
                className: "wo-block wo-blockmergecells",
                layout: "top",
                label: "合并单元格",
                column: !0,
                widgets: [{
                    clazz: "Panel",
                    widgets: [{
                        clazz: "Button",
                        id: "mergecells",
                        className: "wo-btn wo-btn-mergecells",
                        text: "合并单元格"
                    },
                    {
                        clazz: "Button",
                        id: "mergedown",
                        className: "wo-btn wo-btn-mergedown",
                        text: "向下合并单元格"
                    },
                    {
                        clazz: "Button",
                        id: "mergeright",
                        className: "wo-btn wo-btn-mergeright",
                        text: "向右合并单元格"
                    }]
                },
                {
                    clazz: "Panel",
                    widgets: [{
                        clazz: "Button",
                        id: "splittocells",
                        className: "wo-btn wo-btn-splittocells",
                        text: "拆分单元格"
                    },
                    {
                        clazz: "Button",
                        id: "splittocols",
                        className: "wo-btn wo-btn-splittocols",
                        text: "单元格拆分成列"
                    },
                    {
                        clazz: "Button",
                        id: "splittorows",
                        className: "wo-btn wo-btn-splittorows",
                        text: "单元格拆分成行"
                    }]
                }]
            }]
        })
    } (),
    function() {
        FUIToolbar.MainConfig.buttons.push({
            className: "wo-tabs-btn",
            label: "视图"
        }),
        FUIToolbar.MainConfig.panels.push({
            className: "fui-tab-content fui-tab-content-edit",
            widgets: [{
                clazz: "LabelPanel",
                id: "blockdirectory",
                className: "wo-block wo-blockdirectory",
                layout: "top",
                label: "目录",
                widgets: [{
                    clazz: "Button",
                    id: "directory",
                    className: "wo-btn wo-btn-directory",
                    text: "显示目录",
                    label: "显示目录",
                    layout: "bottom"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockshowcomment",
                className: "wo-block wo-blockshowcomment",
                layout: "top",
                label: "批注",
                widgets: [{
                    clazz: "Button",
                    id: "showcomment",
                    className: "wo-btn wo-btn-showcomment",
                    text: "显示批注",
                    label: "显示批注",
                    layout: "bottom"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockpreview",
                className: "wo-block wo-blockpreview",
                layout: "top",
                label: "预览",
                widgets: [{
                    clazz: "Button",
                    id: "preview",
                    className: "wo-btn wo-btn-preview",
                    text: "预览文档",
                    label: "预览文档",
                    layout: "bottom"
                }]
            }]
        })
    } (),
    function() {
        FUIToolbar.MainConfig.buttons.push({
            className: "wo-tabs-btn",
            label: "工具"
        }),
        FUIToolbar.MainConfig.panels.push({
            className: "fui-tab-content fui-tab-content-edit",
            widgets: [{
                clazz: "LabelPanel",
                id: "blockdrafts",
                className: "wo-block wo-blockdrafts",
                layout: "top",
                label: "草稿箱",
                widgets: [{
                    clazz: "Button",
                    id: "drafts2",
                    _cmd: "drafts",
                    className: "wo-btn wo-btn-drafts",
                    text: "草稿箱",
                    label: "草稿箱",
                    layout: "bottom"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockprint",
                className: "wo-block wo-blockprint",
                layout: "top",
                label: "打印",
                widgets: [{
                    clazz: "Button",
                    id: "print",
                    className: "wo-btn wo-btn-print",
                    text: "打印文档",
                    label: "打印文档",
                    layout: "bottom"
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blocksearch",
                className: "wo-block wo-blocksearch",
                layout: "top",
                label: "搜索",
                widgets: [{
                    clazz: "Button",
                    id: "searchreplace",
                    className: "wo-btn wo-btn-searchreplace",
                    text: "查找替换",
                    label: "查找替换",
                    layout: "bottom",
                    _dialog: {
                        width: 400,
                        height: 290,
                        caption: "查找替换"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockwordcount",
                className: "wo-block wo-blockwordcount",
                layout: "top",
                label: "字数统计",
                widgets: [{
                    clazz: "Button",
                    id: "wordcount",
                    className: "wo-btn wo-btn-wordcount",
                    text: "字数统计",
                    label: "字数统计",
                    layout: "bottom",
                    _dialog: {
                        width: 340,
                        height: 260,
                        caption: "字数统计"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockcoordination",
                className: "wo-block wo-blockcoordination",
                layout: "top",
                label: "协同",
                widgets: [{
                    clazz: "Button",
                    id: "coordination",
                    className: "wo-btn wo-btn-coordination",
                    text: "共享给好友",
                    label: "共享给好友",
                    layout: "bottom",
                    _dialog: {
                        width: 600,
                        height: 400,
                        caption: "共享给好友"
                    }
                }]
            },
            {
                clazz: "LabelPanel",
                id: "blockshare",
                className: "wo-block wo-blockshare",
                layout: "top",
                label: "分享",
                widgets: [{
                    clazz: "Button",
                    id: "share",
                    className: "wo-btn wo-btn-share",
                    text: "分享",
                    label: "分享",
                    layout: "bottom"
                }]
            }]
        })
    } (),
    function() {
        WO.ConfigTraveller = function(a, b) {
            var c, d;
            if (a && (b(a), c = "Tabs" === a.clazz ? a.panels: a.widgets, c && c.length)) for (d = 0; d < c.length; d++) WO.ConfigTraveller(c[d], b)
        },
        WO.ConfigTraveller(FUIToolbar.MainConfig,
        function(a) {
            a.clazz && a.id && (a._cmd = a._cmd || a.id, a._dialog && (a._dialog.className = "wo-dialog wo-dialog-" + a.id), a._popup && (a._popup.className = "wo-popup wo-popup-" + a.id))
        })
    } (),
    function() {
        function a(a, b, c) {
            var f, g, h, i, j, k, e = a._cmd;
            a._dialog && (f = WO.WO_URL + "dialogs/", g = a._dialog, h = "wo_" + ( + new Date).toString(36), i = new FUI.Dialog(g), j = $(i.getBodyElement()), k = $EDITORUI[h] = {
                _ishidden: !0,
                editor: c,
                className: "wo-dialog-" + e,
                uiName: "dialog",
                onok: function() {},
                onclose: function() {},
                oncancel: function() {},
                dialog: i,
                reset: function() {
                    j.html('<iframe id="' + h + '_iframe" width="100%" height="' + (g.height - 70) + '" class="wo-dialog-iframe" src="' + f + e + "/" + e + '.html" frameborder="0">')
                },
                open: function() {
                    i.open()
                },
                close: function() {
                    i.close()
                },
                isHidden: function() {
                    return k._ishidden
                },
                buttons: i.getButtons()
            },
            i.on("ok",
            function() {
                return k.onok.apply(c, arguments) === !1 ? !1 : void 0
            }), i.on("close",
            function() {
                k.onclose.apply(c, arguments),
                setTimeout(function() {
                    j.html("")
                })
            }), i.on("cancel",
            function() {
                k.oncancel.apply(c, arguments)
            }), i.on("open",
            function() {
                k._ishidden = !1
            }), i.on("close",
            function() {
                k._ishidden = !0
            }), i.positionTo(document.body), b.on("click",
            function() {
                k.reset(),
                i.open()
            }), WO.on("esc",
            function() {
                return i.isOpen() ? (i.close(), !0) : void 0
            }))
        }
        function b(a, b, c) {
            var f, g, h, i, j, k, e = a._cmd;
            a._popup && (f = WO.WO_URL + "dialogs/", g = a._popup, h = "wo_" + ( + new Date).toString(36), i = new FUI.Popup(g), j = $(i.getElement()).find(".fui-panel-content"), k = $EDITORUI[h] = {
                _ishidden: !0,
                editor: c,
                className: "wo-dialog-" + e,
                uiName: "popup",
                onok: function() {},
                onclose: function() {},
                oncancel: function() {},
                popup: i,
                reset: function() {
                    j.html('<iframe id="' + h + '_iframe" class="wo-dialog-iframe" src="' + f + e + "/" + e + '.html" frameborder="0">')
                },
                open: function() {
                    i.show()
                },
                close: function() {
                    i.close()
                },
                isHidden: function() {
                    return k._ishidden
                },
                getDom: function(a) {
                    var b;
                    return b = "iframe" == a ? j.find("iframe")[0] : "body" == a || "content" == a ? j[0] : i.getElement()
                }
            },
            i.positionTo(b), b.on("click",
            function() {
                k.reset(),
                i.show()
            }))
        }
        function c(a, b, c) {
            c.on("zeroclipboardready",
            function(a, d) {
                d.clip(b.getElement()),
                d.on("copy",
                function() {
                    "cut" == arguments[0].target.id && c.execCommand("inserthtml", UE.dom.domUtils.fillChar)
                })
            })
        }
        function d(a, b, c) {
            c.fireEvent.call(c, "simpleuploadbtnready", b.getElement())
        }
        function e() {}
        FUIToolbar.registerWidgetHandler("Button",
        function(f, g, h) {
            var k, j = f._cmd;
            return "forecolor" == j || "backcolor" == j ? (k = new FUI.ColorPicker({
                clearText: "清除颜色",
                commonText: "通用颜色",
                standardText: "标准颜色",
                resize: "none"
            }), k.attachTo(g), k.on("selectcolor",
            function(a, b) {
                h.execCommand(j, b)
            })) : f._dialog || f._popup || g.on("click",
            function() {
                h.execCommand(j)
            }),
            h.on("selectionchange",
            function() {
                var a = h.queryCommandState(j);
                g[ - 1 == a ? "disable": "enable"](),
                g[1 == a ? "addClass": "removeClass"]("fui-button-pressed")
            }),
            ("copy" == f.id || "cut" == f.id) && c.call(this, f, g, h),
            "simpleupload" == f.id && d.call(this, f, g, h),
            "preview" == f.id && e.call(this, f, g, h),
            a.call(this, f, g, h),
            b.call(this, f, g, h),
            g
        })
    } (),
    FUIToolbar.registerWidgetHandler("InputMenu",
    function(a, b, c) {
        function f(a) {
            a && (b.selectByValue(a) || b.clearSelect(), h(a), b.setValue(a))
        }
        function h(c) {
            "fontfamily" == d && $.each(a.menu.items,
            function(a, b) {
                return b.value.replace(/[', ]/g, "") == c.replace(/[', ]/g, "") ? (c = b.label.text, !1) : void 0
            }),
            b.__inputWidget.setValue(c)
        }
        function i() {
            return b.__inputWidget.getValue()
        }
        var d = a._cmd;
        return a.menu.items,
        "fontfamily" == d && $(".fui-input", b.getElement()).attr({
            readonly: "readonly",
            unselectable: "on"
        }),
        b.on("itemclick inputcomplete",
        function(a, b) {
            var e = b.value;
            "fontsize" == d && /^[\d]+$/.test(e) && (e += "px"),
            c.execCommand(d, e)
        }),
        c.on("selectionchange",
        function() {
            var e, a = c.queryCommandState(d);
            b[ - 1 == a ? "disable": "enable"](),
            b[1 == a ? "addClass": "removeClass"]("fui-button-pressed"),
            e = c.queryCommandValue(d),
            f(e)
        }),
        b.__menuWidget.on("inputcomplete",
        function() {
            b.setValue(i())
        }),
        b
    }),
    FUIToolbar.registerWidgetHandler("ButtonMenu",
    function(a, b, c) {
        var d = a._cmd;
        return a.menu.items,
        b.on("btnclick",
        function(a) {
            $(a.target).hasClass("fui-button-menu-down") || c.execCommand(d, b.getValue())
        }),
        b.on("select",
        function() {
            c.execCommand(d, b.getValue())
        }),
        b
    }),
    FUIToolbar.registerWidgetHandler("DropPanel",
    function(a, b, c) {
        var d = a._cmd,
        e = WO.WO_URL,
        f = {
            className: "wo-fontstyle-buttonset",
            selected: 2,
            buttons: [{
                text: "标",
                icon: e + "assets/images/fontstyle/style_01.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "无间隔​",
                icon: e + "assets/images/fontstyle/style_02.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 1​",
                icon: e + "assets/images/fontstyle/style_03.png",
                value: {
                    tagName: "h1",
                    style: "font-size: 29px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 2​",
                icon: e + "assets/images/fontstyle/style_04.png",
                value: {
                    tagName: "h2",
                    style: "font-size: 21px; font-style: normal; font-family: Cambria, serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 3​",
                icon: e + "assets/images/fontstyle/style_05.png",
                value: {
                    tagName: "h3",
                    style: "font-size: 21px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 4​",
                icon: e + "assets/images/fontstyle/style_06.png",
                value: {
                    tagName: "h4",
                    style: "font-size: 19px; font-style: normal; font-family: Cambria, serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 5​",
                icon: e + "assets/images/fontstyle/style_07.png",
                value: {
                    tagName: "h5",
                    style: "font-size: 19px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 6​",
                icon: e + "assets/images/fontstyle/style_08.png",
                value: {
                    tagName: "h6",
                    style: "font-size: 16px; font-style: normal; font-family: Cambria, serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 7​",
                icon: e + "assets/images/fontstyle/style_09.png",
                value: {
                    tagName: "p",
                    style: "font-size: 16px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 8​",
                icon: e + "assets/images/fontstyle/style_10.png",
                value: {
                    tagName: "p",
                    style: "font-size: 16px; font-style: normal; font-family: Cambria, serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题 9​",
                icon: e + "assets/images/fontstyle/style_11.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: Cambria, serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "标题​",
                icon: e + "assets/images/fontstyle/style_12.png",
                value: {
                    tagName: "p",
                    style: "font-size: 21px; font-style: normal; font-family: Cambria, serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "副标题​",
                icon: e + "assets/images/fontstyle/style_13.png",
                value: {
                    tagName: "p",
                    style: "font-size: 21px; font-style: normal; font-family: Cambria, serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "不明显强调​",
                icon: e + "assets/images/fontstyle/style_14.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: italic; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #404040;"
                }
            },
            {
                text: "强调​",
                icon: e + "assets/images/fontstyle/style_15.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: italic; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "明显强调​",
                icon: e + "assets/images/fontstyle/style_16.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: italic; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #4f81bd;"
                }
            },
            {
                text: "增强​",
                icon: e + "assets/images/fontstyle/style_17.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "引用​",
                icon: e + "assets/images/fontstyle/style_18.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: italic; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #404040;"
                }
            },
            {
                text: "明显引用​",
                icon: e + "assets/images/fontstyle/style_19.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: italic; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #4f81bd;"
                }
            },
            {
                text: "不明显参考​",
                icon: e + "assets/images/fontstyle/style_20.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #5a5a5a;"
                }
            },
            {
                text: "明显参考​",
                icon: e + "assets/images/fontstyle/style_21.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: underline; color: #c0504d;"
                }
            },
            {
                text: "书籍标题​",
                icon: e + "assets/images/fontstyle/style_22.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: italic; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: bold; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "列出段落​",
                icon: e + "assets/images/fontstyle/style_23.png",
                value: {
                    tagName: "p",
                    style: "font-size: 14px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "caption​",
                icon: e + "assets/images/fontstyle/style_24.png",
                value: {
                    tagName: "p",
                    style: "font-size: 13px; font-style: normal; font-family: Cambria, serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "toc 1​",
                icon: e + "assets/images/fontstyle/style_25.png",
                value: {
                    tagName: "p",
                    style: "font-size: 15px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "toc 2​",
                icon: e + "assets/images/fontstyle/style_26.png",
                value: {
                    tagName: "p",
                    style: "font-size: 15px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "toc 3​",
                icon: e + "assets/images/fontstyle/style_27.png",
                value: {
                    tagName: "p",
                    style: "font-size: 15px; font-style: normal; font-family: 'Microsoft YaHei UI', 'Microsoft YaHei', 微软雅黑, SimSun, 宋体, sans-serif; font-weight: normal; text-decoration: none; color: #000000;"
                }
            },
            {
                text: "TOC Heading​",
                icon: e + "assets/images/fontstyle/style_28.png",
                value: {
                    tagName: "p",
                    style: "font-size: 19px; font-style: normal; font-family: Cambria, serif; font-weight: bold; text-decoration: none; color: #365f91;"
                }
            }]
        },
        g = new FUI.Buttonset(f);
        return b.appendWidget(g),
        g.on("click",
        function() {
            var e; (e = g.getValue()) && c.execCommand(d, e),
            b.close()
        }),
        b
    }),
    FUIToolbar.registerWidgetHandler("ColorPicker",
    function(a, b, c) {
        var d = a._cmd,
        e = new FUI.ColorPicker({
            clearText: "清除颜色",
            commonText: "通用颜色",
            standardText: "标准颜色",
            resize: "none"
        });
        return e.attachTo(b),
        e.on("selectcolor",
        function(a, b) {
            c.execCommand(d, b)
        }),
        b
    }),
    FUIToolbar.registerWidgetHandler("TablePicker",
    function(a, b, c) {
        var d = a._cmd;
        return b.on("pickerselect",
        function(a, b) {
            c.execCommand(d, {
                border: 1,
                numCols: b.col,
                numRows: b.row,
                tdvalign: "top"
            })
        }),
        c.on("selectionchange",
        function() {
            var a = c.queryCommandState(d);
            b[ - 1 == a ? "disable": "enable"](),
            b[1 == a ? "addClass": "removeClass"]("fui-button-pressed")
        }),
        b
    }),
    WO.registerUI("toolbardock",
    function() {
        WO.ready(function() {
            function g(a, b, c) {
                b.duration = 200,
                b.easing = "ease",
                b.complete = c,
                a.transition(b)
            }
            var b = !0,
            c = WO.toolbar.$tabContent,
            d = WO.toolbar.$tabList,
            e = WO.toolbar.$toolbar,
            f = $('<div class="toggle-toolbar"><span class="fold-toolbar" id="fold-toolbar" title="折叠工具栏"></span><span class="dock-toolbar" id="dock-toolbar" title="固定工具栏"></span></div>');
            f.appendTo(c),
            $("#fold-toolbar").on("click",
            function() {
                $(".fui-selected", d).removeClass("fui-selected"),
                f.css("display", "none"),
                g(e, {
                    height: "30px"
                }),
                g($(".main"), {
                    top: "76px"
                }),
                b = !1
            }),
            $(".wo-tabs-btn", WO.toolbar.$tabList).on("click",
            function() {
                g(e, {
                    height: "142px"
                },
                function() {
                    f.css("display", "block")
                }),
                b || ($("#fold-toolbar").css("display", "none"), $("#dock-toolbar").css("display", "block"))
            }),
            $("#dock-toolbar").on("click",
            function() {
                g($(".main"), {
                    top: "188px"
                }),
                b = !0,
                $("#fold-toolbar").css("display", "block"),
                $("#dock-toolbar").css("display", "none")
            }),
            WO.editor.on("keydown mousedown",
            function() {
                b || $("#fold-toolbar").trigger("click")
            })
        })
    })
} ();